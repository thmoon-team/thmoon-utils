{
    "env": {
      "browser": true,
      "es2021": true
    },
    "extends": [
      "plugin:react/recommended", 
      "airbnb", 
      "plugin:prettier/recommended",
      "prettier",
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:import/errors",
      "plugin:import/warnings",
      "plugin:import/typescript",
      "plugin:eslint-comments/recommended",
      "plugin:react-hooks/recommended"

    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true
      },
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "plugins": [
      "@typescript-eslint",
      "react",
      "standard",
      "react-hooks",
      "import",
      "simple-import-sort",
      "unused-imports",
      "typescript-sort-keys",
      "jest"
    ],
    "overrides": [
      {
          "files": ["*.json"],
          "rules": {
              "no-unused-expressions": "off"
          }
      }
    ],
    "rules": {
      "no-shadow": "off",
      "import/no-unresolved": [0, { "caseSensitiveStrict": true }],
      "import/prefer-default-export": "off",
      "import/extensions": "off",
      "react/jsx-filename-extension": [
        1,
        { "extensions": [".js", ".ts", ".tsx", ".json"] }
      ],
      "react/function-component-definition": [
        2,
        { "namedComponents": "arrow-function" }
      ],
      "react/require-default-props": [
        1,
        { "forbidDefaultForRequired": false, "ignoreFunctionalComponents": true }
      ],
      "simple-import-sort/exports": "error",
      "react/jsx-props-no-spreading": [0],
      "simple-import-sort/imports": [
        "error",
        {
            "groups": [
                // Node.js builtins. You could also generate this regex if you use a `.js` config.
                // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
                [
                    "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
                ],
                // Packages. `react` related packages come first.
                ["^react", "^@?\\w"],
                // Internal packages.
                ["^(@|@company|@ui|components|utils|config|vendored-lib)(/.*|$)"],
                // Side effect imports.
                ["^\\u0000"],
                // Parent imports. Put `..` last.
                ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
                // Other relative imports. Put same-folder imports and `.` last.
                ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
                // Style imports.
                ["^.+\\.s?css$"]
            ]
        }
      ],
      "typescript-sort-keys/interface": "error",
      "typescript-sort-keys/string-enum": "error",
      "@typescript-eslint/no-shadow": ["error"],
      "jest/no-disabled-tests": "warn",
      "jest/no-focused-tests": "error",
      "jest/no-identical-title": "error",
      "jest/prefer-to-have-length": "warn",
      "jest/valid-expect": "error",
      "import/no-extraneous-dependencies": [
        "error",
        {
          "devDependencies": [
            "test.{ts,tsx}", // repos with a single test file
            "test-*.{ts,tsx}", // repos with multiple top-level test files
            "**/*{.,_}{test,spec}.{ts,tsx}", // tests where the extension or filename suffix denotes that it is a test
            "**/jest.config.ts", // jest config
            "**/jest.setup.ts" // jest setup
          ],
          "optionalDependencies": false
        }
      ]
    },
    "settings": {
      "import/resolver": {
        "node": {
          "extensions": [".js", ".ts", ".tsx", ".json"]
        }
      }
    }
  }